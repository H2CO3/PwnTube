/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/YouTube.framework/YouTube
 */

#import "YouTube-Structs.h"
#import <pthread.h>
#import <Foundation/Foundation.h>

@interface YTImageLoader : NSObject {
	NSLock *_queueLock;
	NSMutableArray *_loadQueue;
	NSMutableSet *_loadsInProgress;
	NSLock *_cacheLock;
	NSMutableDictionary *_imageCache;
	NSMutableDictionary *_roundedThumbnailImageCache;
	NSMutableDictionary *_largeThumbnailImageCache;
	NSMutableDictionary *_pluginImageCache;
	NSMutableArray *_imageCacheLRU;
	CFRunLoopRef _loaderRunLoop;
	CFRunLoopSourceRef _loaderSource;
	NSNotificationCenter *_notificationCenter;
	NSTimer *_loadStatusNotificationTimer;
	void *_startupLock;
	void *_startupCondition;
}
@property(readonly, retain) NSNotificationCenter *notificationCenter;	// converted property
+ (id)sharedImageLoader;
- (id)init;
- (CGImageRef)_largeThumbnailOverlay;
- (CGImageRef)createRoundedThumbnailWithImage:(CGImageRef)image;
- (CGImageRef)createSheenedThumbnailWithImage:(CGImageRef)image overlay:(CGImageRef)overlay width:(int)width height:(int)height;
- (CGImageRef)imageForURL:(id)url rounded:(BOOL)rounded videoID:(id)anId loadIfAbsent:(BOOL)absent;
- (BOOL)isLoadingImages;
- (CGImageRef)largeImageForURL:(id)url videoID:(id)anId loadIfAbsent:(BOOL)absent;
- (void)loadCache:(id)cache;
// converted property getter: - (id)notificationCenter;
- (CGImageRef)pluginImageForURL:(id)url videoID:(id)anId loadIfAbsent:(BOOL)absent;
- (void)saveCache:(id)cache;
@end

@interface YTImageLoader (Internal)
- (void)_imageLoadFinished:(id)finished;
- (void)_loadImageURL:(id)url videoID:(id)anId;
- (void)_loadingStatusChanged;
- (BOOL)_locked_URLIsLoading:(id)loading;
- (void)_locked_imageLoadStarted:(id)started;
- (id)_locked_loadImageCache:(id)cache;
- (void)_locked_loadImageForURL:(id)url videoID:(id)anId;
- (id)_locked_saveImageCache:(id)cache;
- (void)_mainThread_postLoadingStatusChanged;
- (void)_postImageLoadedNotification:(id)notification;
- (void)_postLoadingStatusChanged;
- (void)_setImageData:(id)data videoID:(id)anId forURL:(id)url cacheLocked:(BOOL)locked;
- (void)_startLoader;
@end

